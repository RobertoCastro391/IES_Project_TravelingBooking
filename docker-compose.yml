version: '3'

services:
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    depends_on:
      - zookeeper

    networks:
      - app-network

  data-sources:
    build:
      context: ./DataSources
      dockerfile: Dockerfile
    volumes:
      - ./DataSources:/usr/src/app
    depends_on:
      - kafka
    networks:
      - app-network

  db:
    image: mysql/mysql-server:8.0.26
    environment:
      MYSQL_DATABASE: 'TravelBookingDB'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'rootpassword'
    ports:
      - 3306:3306
    volumes:
      - /var/lib/mysql  
    networks:
      - app-network

  travelingbooking-app:
    build:
      context: ./TravelingBooking
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data: